# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: MIT
#

parameters:
- name: poolName
  type: string
- name: mode
  type: string
  values:
    - 'AllPorts' # PR mode
    - 'CorePorts' # CI, excluding tensorflow
    - 'ExtraPorts' # only tensorflow
variables:
- name: Postfix
  ${{ if eq(parameters.mode, 'ExtraPorts') }}:
    value: "_tensorflow"
  ${{ if ne(parameters.mode, 'ExtraPorts') }}:
    value: ""

jobs:
- job: "x64_osx${{ variables.Postfix }}"
  pool:
    name: ${{ parameters.poolName }}
  workspace:
    clean: resources
  timeoutInMinutes: 1440 # 1 day
  variables:
  - name: WORKING_ROOT
    value: /Users/vagrant/Data
  - name: VCPKG_DOWNLOADS
    value: /Users/vagrant/Data/downloads
  - group: osx-binary-caching-credentials
  - name: BINARY_SOURCE_STUB
    value: "x-azblob,$(root-url),$(sas)"
  - group: vcpkg-asset-caching-credentials
  - name: X_VCPKG_ASSET_SOURCES
    value: "x-azurl,$(root-url),$(sas),readwrite"
  - name: PowershellExtraArguments
    ${{ if eq(parameters.mode, 'AllPorts') }}:
      value: ''
    ${{ if eq(parameters.mode, 'CorePorts') }}:
      value: "-AdditionalSkips @('tensorflow', 'tensorflow-cc')"
    ${{ if eq(parameters.mode, 'ExtraPorts') }}:
      value: "-OnlyTest @('tensorflow', 'tensorflow-cc')"

  steps:
  - bash: df -h
    displayName: 'Report on Disk Space'
  - bash: |
      sudo rm -rf ${{ variables.VCPKG_DOWNLOADS }} || 0
      sudo mkdir ${{ variables.VCPKG_DOWNLOADS }} || 0
      sudo chmod 777 ${{ variables.VCPKG_DOWNLOADS }} || 0
      exit 0
    displayName: 'Create ${{ variables.VCPKG_DOWNLOADS }}'
  - task: Bash@3
    displayName: 'Build vcpkg'
    inputs:
      filePath: bootstrap-vcpkg.sh
  - task: PowerShell@2
    displayName: '*** Test Modified Ports and Prepare Test Logs ***'
    inputs:
      failOnStderr: true
      filePath: 'scripts/azure-pipelines/test-modified-ports.ps1'
      arguments: >
        -Triplet "x64-osx"
        -BuildReason "$(Build.Reason)"
        -BinarySourceStub "${{ variables.BINARY_SOURCE_STUB }}"
        -WorkingRoot "${{ variables.WORKING_ROOT }}"
        -ArtifactStagingDirectory "$(Build.ArtifactStagingDirectory)"
        ${{ variables.PowershellExtraArguments }}
      pwsh: true
  - bash: |
      df -h
    displayName: 'Report on Disk Space After Build'
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: failure logs for x64-osx'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/failure-logs'
      ArtifactName: 'failure logs for x64-osx${{ variables.Postfix }}'
    condition: always()
  - bash: |
      python3 scripts/file_script.py /Users/vagrant/Data/installed/vcpkg/info/
    displayName: 'Build a file list for all packages'
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: file lists for x64-osx${{ variables.Postfix }}'
    condition: always()
    inputs:
      PathtoPublish: scripts/list_files
      ArtifactName: 'file lists for x64-osx${{ variables.Postfix }}'
